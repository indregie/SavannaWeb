@using Savanna.Backend
@using Savanna.Frontend
@using Savanna.Backend.Actors

@{
    ViewBag.Title = "Savanna Game";
    UIManager uiManager = ViewData["UIManager"] as UIManager;
}

<h2>Welcome to Savanna!</h2>
<p>Loaded animals:</p>
@foreach (var kvp in AnimalFactory.AnimalTypes)
{
<p>Enter @kvp.Key to add @kvp.Value.Name.</p>

}

<div>
    <form method="post" action="@Url.Action("HandleInput", "Game")">
        <input type="text" name="animalSymbol" />
        <input type="submit" value="Add animal" />
    </form>
</div>

<div id="game-board">
    <h3>Game board:</h3> 
    @if (uiManager != null)
    {
        List<Animal> animals = uiManager.GetBoardAnimals().ToList();
        char[,] board = new char[Constants.MaxY, Constants.MaxX];

        foreach (var animal in animals)
        {
            board[animal.Position.Y, animal.Position.X] = animal.Symbol;
        }

        @for (int i = 0; i < Constants.MaxY; i++)
        {
            for (int j = 0; j < Constants.MaxX; j++)
            {
                @Html.Raw(board[i, j]);
            }
            <text><br /></text>
        }
    }
    else
    {
        <p>UIManager is not available. Ensure it's properly set in the controler.</p>
    }
</div>

<script>
    function updateBoard() {
        $.ajax({
            url: 'Game/GetBoard',
            type: 'GET',
            success: function (data) {
                //update game board display with the received data
            }
        });
    }

    $(document).keypress(function (event) {
        var keyChar = String.fromCharCode(event.which).toUpperCase();
        $.ajax({
            url: 'Game/AddAnimal',
            type: 'POST',
            data: { animalSymbol: keyChar },
            success: function () {
                //optional, additional actions
            }
        })
    });

    setInterval(updateBoard, 1000);
</script>