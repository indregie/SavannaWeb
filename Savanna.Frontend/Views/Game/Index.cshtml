@using Savanna.Backend
@using Savanna.Frontend
@using Savanna.Backend.Actors

@{
    ViewBag.Title = "Savanna Game";
    UIManager uiManager = ViewData["UIManager"] as UIManager;
    List<List<char>> board = uiManager.GetGameBoard();
}

<h2>Welcome to Savanna!</h2>
<p>Loaded animals:</p>
@foreach (var kvp in AnimalFactory.AnimalTypes)
{
<p>Enter @kvp.Key to add @kvp.Value.Name.</p>

}

@* posts input to controller HandleInput action *@

<form id="animalForm">
    <input id="animalSymbol" type="text" name="animalSymbol" maxlength="1" />
    <input id="addAnimalButton" type="submit" value="Add animal" />
</form>

<div id="game-board">
    <table>
        <caption>Game board:</caption> 
        <tbody id="boardBody">
                @for (int i = 0; i < Constants.MaxY; i++)
                {
                    <tr>
                        @for (int j = 0; j < Constants.MaxX; j++)
                        {
                            <td id="cell-@i-@j">@board[i][j]</td>
                        }
                    </tr>
                }
        </tbody>
    </table>
</div>

<script>

    function updateBoard() {
        fetch('@Url.Action("GetGameBoard", "Game")')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                const boardBody = document.getElementById('boardBody');
                boardBody.innerHTML = '';
                data.forEach((row, i) => {
                    const tr = document.createElement('tr');;
                    row.forEach((cell, j) => {
                        const td = document.createElement('td');
                        td.textContent = cell;
                        tr.appendChild(td);
                    });
                    boardBody.appendChild(tr);
                });
            })
            .catch(error => {
                console.error(error);
            });
    }

    document.getElementById('addAnimalButton').addEventListener('click', function (event) {
        event.preventDefault();
        console.log("listener alive");
        var animalSymbol = document.getElementById('animalSymbol').value.toUpperCase();
        fetch('@Url.Action("HandleInput", "Game")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ animalSymbol: animalSymbol })
        })
            .then(response => {
                console.log("response fetched");
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
            })
            .catch(error => {
                console.error(error);
            });
    });

    setInterval(updateBoard, 1000);
</script>